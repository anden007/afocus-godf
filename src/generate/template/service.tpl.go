// Code generated by hero.
// source: D:\GoProjects\github.com/anden007/afocus-godf\Backend\src\generate\template\service.tpl
// DO NOT EDIT!
package template

import "bytes"

func Service(pkgCode string, model string, buffer *bytes.Buffer) {
	buffer.WriteString(`
package service_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`

import (
	"github.com/anden007/afocus-godf/src/model/model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`"
	"github.com/anden007/afocus-godf/src/repositories/repository_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`"
	"github.com/anden007/afocus-godf/src/services/service_core"
	"github.com/google/uuid"
)

type `)
	buffer.WriteString(model)
	buffer.WriteString(`Service struct {
	lruCache *service_core.LruCache
	repo *repository_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`Repository
}

func New`)
	buffer.WriteString(model)
	buffer.WriteString(`Service(lruCache *service_core.LruCache, repo *repository_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`Repository) *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service {
	instance := &`)
	buffer.WriteString(model)
	buffer.WriteString(`Service{
	    lruCache: lruCache,
		repo: repo,
	}
	return instance
}

func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) GetById(id uuid.UUID) (result model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`, err error) {
	result, err = m.repo.GetById(id)
	return
}

func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) GetAll() (result []model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`, err error) {
	result, err = m.repo.GetAll()
	return
}

func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) Add(entity model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`) (err error) {
	err = m.repo.Add(entity)
	return
}

func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) Edit(entity model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`) (err error) {
	err = m.repo.Edit(entity)
	return
}

func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) DelByIds(ids []uuid.UUID) (err error) {
	err = m.repo.DelByIds(ids)
	return
}


func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) Updates(id uuid.UUID, fieldValues map[string]interface{}) (err error) {
	err = m.repo.Updates(id, fieldValues)
	return
}


func (m *`)
	buffer.WriteString(model)
	buffer.WriteString(`Service) GetByCondition(condition map[string]string) (result []model_`)
	buffer.WriteString(pkgCode)
	buffer.WriteString(`.`)
	buffer.WriteString(model)
	buffer.WriteString(`, total int64, err error) {
	result, total, err = m.repo.GetByCondition(condition)
	return
}`)

}
